name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: |
          npm install -g pnpm
          pnpm install
        
      - name: Build Electron App
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            pnpm max build electron --win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            pnpm max build electron --mac
          else
            pnpm max build electron --linux
          fi
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            dist_electron/*.exe
            dist_electron/*.dmg
            dist_electron/*.AppImage
            dist_electron/*.snap
            dist_electron/*.deb
            dist_electron/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
            artifacts/**/*.snap
            artifacts/**/*.deb
            artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
